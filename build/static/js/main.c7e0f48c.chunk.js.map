{"version":3,"sources":["components/Start/index.js","components/Start/Start.js","pages/Homepage.js","components/UserPanel/index.js","components/UserPanel/UserPanel.js","components/NotFound/index.js","components/NotFound/NotFound.js","components/Repository/index.js","components/Repository/Repository.js","components/Repositories/index.js","components/Repositories/Repositories.js","components/Loading/index.js","components/Loading/Loading.js","components/language/index.js","components/language/language.js","components/languages/index.js","components/languages/languages.js","config.js","components/User/index.js","components/User/User.js","pages/Userpage.js","components/Form/Form.js","components/Form/index.js","components/Header/index.js","components/Header/Header.js","components/Footer/index.js","components/Footer/Footer.js","components/Layout/index.js","components/Layout/Layout.js","index.js"],"names":["Start","className","Homepage","UserPanel","user","githubProfile","html_url","login","name","location","created_at","company","blog","followers","public_repos","repos","following","dateArr","Date","toString","split","splice","href","target","rel","NotFound","heading","message","Repository","repository","description","stars","stargazers_count","url","language","forks_count","license","fork","updated_at","owner","langType","des","forkcount","updateArr","Repositories","repositories","length","Object","keys","map","index","key","Loading","language","language","author","languages","props","state","this","fetch","then","res","json","languagesData","setState","languages","getUserData","prevProps","languagesContent","value","to","process","icon","faArrowLeft","Component","User","match","params","username","Promise","all","config","res1","res2","userData","reposData","content","Userpage","Form","handleChange","event","handleSubmit","preventDefault","trim","pathname","history","push","onSubmit","role","htmlFor","type","onChange","placeholder","id","withRouter","Header","title","src","alt","class","Footer","year","getFullYear","Layout","children","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.c7e0f48c.chunk.js","sourcesContent":["import Start from './Start';\nexport default Start;","import React from 'react';\n\nconst Start = () => {\n    return (\n        <div className=\"boxstart\">\n           \n        </div>\n    );\n};\n\nexport default Start;","import React from 'react';\nimport Start from '../components/Start';\n\nconst Homepage = () => {\n    return (\n        <Start />\n    );\n};\n\nexport default Homepage;","import UserPanel from './UserPanel';\nexport default UserPanel;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst UserPanel = ({ user }) => {\n    const {\n        html_url: githubProfile,\n        name,\n        login,\n        location,\n        company,\n        blog,\n        created_at: created_at,\n        followers,\n        repos,\n        public_repos,\n        following\n    } = user;\n\n   \n    const date = new Date(created_at);\n    const dateArr = date\n      .toString()\n      .split(\" \")\n      .splice(3, 1);\n\n    return (\n\n     \n        <div className=\"user is-animated fadeInLeft\">\n            <h3 className=\"result-title\">[{login}]</h3>\n            <span className=\"result-subtitle\">A passionate Github user</span>\n\n            <span className=\"result-title\">\n                <a href={githubProfile}  target=\"_blank\" rel=\"noopener noreferrer\">\n                    {githubProfile}\n                </a>\n            </span>\n            <span className=\"since\">\n              On GitHub since {dateArr}, {login} is a developer based in{\" \"}\n              {location} with{\" \"}\n              <span className=\"pink\">{public_repos} public repositories </span>and{\" \"}\n              <span className=\"pink\">{followers} followers</span>{\" \"}and{\" \"}\n              <span className=\"pink\">{following} following</span>.\n            </span>\n\n        </div>\n    );\n};\n\nconst UserData = ({ item }) => {\n    const value = item[1] !== null ? item[1] : null;\n    const desc = item[0];\n\n    if (!value) {\n        return null;\n    }\n\n    return (\n        <li className=\"data--item\">\n            <span className=\"data--desc\">{desc}</span>\n            <span className=\"data--value\">{value}</span>\n        </li>\n    );\n};\n\nexport default UserPanel;","import NotFound from './NotFound';\nexport default NotFound;","import React from 'react';\n\nconst NotFound = ({ heading, message }) => {\n    return (\n        <div className=\"panel not-found\">\n            <h2 className=\"panel--title\">{heading}</h2>\n            <p className=\"panel--content\">{message}</p>\n        </div>\n    );\n};\n\nexport default NotFound;","import Repository from './Repository';\nexport default Repository;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Repository = ({ repository }) => {\n    const {\n        name,\n        description,\n        stargazers_count: stars,\n        html_url: url,\n        language,\n        license,\n        fork,\n        forks_count,\n        created_at,\n        updated_at,\n        owner: {login} = {}\n    } = repository;\n    \n    const langType = language || <br/>;\n    const des = description || 'No Description';\n    const forkcount = forks_count || '0';\n\n    let showLicense;\n    const date = new Date(created_at);\n    const dateArr = date\n      .toString()\n      .split(\" \")\n      .splice(3, 1);\n    const update = new Date(updated_at);\n    const updateArr = update\n      .toString()\n      .split(\" \")\n      .splice(3, 1);\n   \n    return (\n        <li className=\"panel\">\n            <h2 className=\"panel--title\">\n               <a href={url} className=\"panel--link\" target=\"_blank\" rel=\"noopener noreferrer\">{name}</a>\n               <span className=\"floatRight\">[{dateArr}]-[{updateArr}]</span> \n            </h2>\n            <span className=\"panel--lang\">\n                   {langType}\n            </span>\n\n            <p className=\"panel--content\">[{des}]</p>\n            <div className=\"panel--meta meta\">\n                <span className=\"meta--item\">\n                This repository has {stars} stars and {forkcount} forks. If you would like more information about this repository and my contributed code, please visit <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{name}</a> on GitHub.\n                </span>\n            </div>\n        </li>\n    );\n};\n\nexport default Repository;","import Repositories from './Repositories';\nexport default Repositories;","import React from 'react';\nimport NotFound from '../NotFound';\nimport Repository from '../Repository';\n\nconst Repositories = ({ repositories }) => {\n    let repository;\n    \n \n    \n    // Get repositories\n    if (repositories.length) { \n        repository = Object.keys(repositories).map(index => {\n            return <Repository key={index} repository={repositories[index]} />;\n        });\n    } else {\n        repository = <NotFound heading=\"No repositories\" message=\"There are no repositories to display.\" />;\n    }\n    \n    return (\n        <div className=\"is-animated fadeInLeft\">\n            <header className=\"panel--header\">\n                <h2 className=\"repo-title\">Popular Repositories</h2>\n            </header>\n            <ol>\n                {repository}\n            </ol>\n        </div>\n    );\n};\n\nexport default Repositories;","import Loading from './Loading';\nexport default Loading;","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className=\"panel loading\">\n            <h2 className=\"panel--title loading--title\">Loading...</h2>\n        </div>\n    );\n};\n\nexport default Loading;","import language from './language';\nexport default language;","import React from 'react';\n\nconst language = ({ language }) => {\n    const {\n        message,\n        author: { name } = {}\n    } = language;\n\n    return (\n        <li className=\"panel languages\">\n            <h2 className=\"panel--title languages--title\">{message}</h2>\n            <div className=\"panel--meta languages--meta\">\n                <span className=\"meta--author\">by {name}</span>\n            </div>\n        </li>\n    );\n};\n\nexport default language;","import languages from './languages';\nexport default languages;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport Loading from '../Loading/';\nimport NotFound from '../NotFound/';\nimport language from '../language';\n\nclass languages extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {};\n        \n        this.login = this.props.login;\n        this.repository = this.props.repository;\n    }\n    \n    // Call Github API\n    getUserData() {\n        const url = `https://api.github.com/repos/${this.login}/${this.repository}/languages?per_page=10`;\n\n        fetch(url)\n            .then(res => res.json())\n            .then(languagesData => this.setState({\n                languages: languagesData\n            }));\n    }\n\n    componentDidMount() {\n        this.getUserData();\n    }\n\n    componentDidUpdate(prevProps) {\n        this.login = this.props.login;\n        this.repository = this.props.repository;\n\n        if ((prevProps.repository !== this.repository) || (prevProps.login !== this.login)) {\n            this.getUserData();\n        }\n    }\n\n    render() {\n        if (!this.state.languages) {\n            return (\n                <Loading />\n            );\n        }\n\n        const languages = this.state.languages;\n        let languagesContent;\n\n        // If repository not exist, return error\n        if (languages.message === 'Not Found') {\n            return <NotFound heading=\"No Repository\" message=\"Given Github repository name not exist. Try again.\" />;\n        }\n\n        // Get items\n        if (languages.length) { \n            languagesContent = languages.map((value, index) => {\n                return <language key={index} language={value.language} />;\n            });\n        } else {\n            languagesContent = <NotFound heading=\"No languages\" message=\"There are no languages to display.\" />;\n        }\n\n        return (\n            <div className=\"is-animated fadeInLeft\">\n                <header className=\"panel--header panel--header-flex\">\n                    <Link to={`${process.env.PUBLIC_URL}/user/${this.login}`} className=\"panel--back\">\n                        <FontAwesomeIcon icon={faArrowLeft} className=\"panel--icon\" /> Back\n                    </Link>\n\n                    <div>\n                        <h2 className=\"panel--heading\">{this.repository}</h2>\n                        <h2 className=\"panel--subheading\">Last 10 languages</h2>\n                    </div>\n                </header>\n\n                <ol>\n                    {languagesContent}\n                </ol>\n            </div>\n        );\n    }\n}\n\nexport default languages;","export default {\n    githubAPI: 'https://api.github.com'\n};","import User from './User';\nexport default User;","import React, { Component } from 'react';\nimport UserPanel from '../UserPanel';\nimport Repositories from '../Repositories';\nimport languages from '../languages';\nimport Loading from '../Loading';\nimport NotFound from '../NotFound';\nimport config from '../../config';\n\nclass User extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        this.login = this.props.match.params.username;\n    }\n    \n    // Call Github API\n    getUserData() {\n        Promise.all([\n            fetch(`${config.githubAPI}/users/${this.login}`),\n            fetch(`${config.githubAPI}/users/${this.login}/repos`)\n        ])\n            .then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\n            .then(([userData, reposData]) => this.setState({\n                user: userData, \n                repositories: reposData\n            }));\n    }\n\n    componentDidMount() {\n        this.getUserData();\n    }\n\n    componentDidUpdate(prevProps) {\n        this.login = this.props.match.params.username;\n\n        if (prevProps.match.params.username !== this.login) {\n            this.getUserData();\n        }\n    }\n\n    render() {\n        let content;\n\n        if (!this.state.user) {\n            return (\n                <Loading />\n            );\n        }\n\n        // If user not exist, return error\n        if (this.state.user.message === 'Not Found') {\n            return (\n                <NotFound heading=\"Nothing Found\" message=\"Given Github username not exist. Try again.\" />\n            );\n        }\n\n        // Load repositories or repository languages\n        if (this.props.match.params.repository) {\n            content = <languages login={this.state.user.login} repository={this.props.match.params.repository} />;\n        } else {\n            content = <Repositories repositories={this.state.repositories} />;\n        }\n\n        return (\n            <div className=\"main--container\">\n                \n                <div className=\"main--content\">\n                <UserPanel user={this.state.user} />\n                    {content}\n                    \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default User;","import React from 'react';\nimport User from '../components/User';\n\nconst Userpage = props => {\n    return (\n        <User {...props} />\n    );\n};\n\nexport default Userpage;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {login: ''};\n    }\n\n    // Handle input change\n    handleChange = (event) => {\n        this.setState({\n            login: event.target.value\n        });\n    }\n\n    // Handle submit button\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const login = this.state.login.trim();\n\n        if (login.length) {\n            if (this.props.location.pathname !== `/user/${login}`) {\n                this.props.history.push(`/user/${login}`);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <form className=\"form\" onSubmit={this.handleSubmit} role=\"search\">\n                <label htmlFor=\"search\" className=\"form--label is-hidden\">Username</label>\n                <input type=\"text\" onChange={this.handleChange} placeholder=\"John Doe\" id=\"search\" className=\"form--input\" />\n                <input type=\"submit\" value=\"Generieren\" className=\"form--btn\" />\n            </form>\n        );\n    }\n}\n\nexport default withRouter(Form);","import Form from './Form';\nexport default Form;","import Header from './Header';\nexport default Header;","import React from 'react';\nimport Form from '../Form';\n\nconst Header = () => {\n    return (\n        <header className=\"header header\">\n        <nav className=\"header--nav\">\n            <a target=\"_blank\" href=\"https://www.exozet.com/\" title=\"Exozet Best 2020 Github Resume Maker\">\n                 <img className=\"logo\" src=\"../img/logo.png\" alt=\"Exozet Best Resume Maker\"/>\n            </a>\n        </nav>\n            <h1 className=\"header--title\">My Github Resum&#233;</h1>\n            \n            <div className=\"box\">\n            <h2 className=\"form-title\">Github username</h2>\n                <div class=\"boxform\">\n                      <Form />\n                </div>\n            </div>\n           \n        </header>\n    );\n};\n\nexport default Header;","import Footer from './Footer';\nexport default Footer;","import React from 'react';\n\nconst Footer = () => {\n    const year = new Date().getFullYear();\n\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer--copyright\"><a className=\"copyright\" target=\"_blank\" href=\"https://www.exozet.com/\" title=\"Exozet Github Resume Maker\">&copy; exozet {year}</a></p>\n        </footer>\n    );\n};\n\nexport default Footer;","import Layout from './Layout';\nexport default Layout;","import React from 'react';\nimport Header from '../Header';\nimport Footer from '../Footer';\n\nconst Layout = ({ children }) => {\n    return (\n        <>\n            <Header />\n            <main className=\"main\">\n                {children}\n            </main>\n            <Footer />\n        </>\n    );\n};\n\nexport default Layout;","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, HashRouter } from 'react-router-dom';\nimport Homepage from './pages/Homepage';\nimport Userpage from './pages/Userpage';\nimport Layout from './components/Layout';\nimport './scss/app.scss';\n\nconst App = () => {\n    return (\n        <HashRouter> \n            <Layout>\n                <Route exact path=\"/\" component={Homepage} />\n                <Route exact path=\"/user/:username/:repository?\" component={Userpage} />\n            </Layout>\n        </HashRouter>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}